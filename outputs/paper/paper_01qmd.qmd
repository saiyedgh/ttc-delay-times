---
title: "change title"
subtitle: "My subtitle if needed"
author: "Syed Hassan"
thanks: "Code and data are available at: LINK."
date: "`r Sys.time()`"
date-format: "D MMMM YYYY"
abstract: "First sentence. Second sentence. Third sentence. Fourth sentence."
format: pdf
bibliography: references.bib
---


```{r}
#| warning: false
#| echo: false

# loads the required libraries
library(tidyverse)
library(opendatatoronto)
library(palmerpenguins)
library(janitor)

```


```{r}
#| warning: false
#| echo: false

data_url <- "https://open.toronto.ca/dataset/ttc-subway-delay-data/"

packages_data <- data_url |> 
  list_package_resources()

delay_data_2022 <- filter(packages_data, name == "ttc-subway-delay-data-2022")

not_cleaned <- delay_data_2022 |> 
  get_resource()

ttc_data <- not_cleaned |>  
  clean_names() |> 
  mutate(
    line =
      recode(
        line,
        "BD" = "Line 02 Green",
        "SHP" = "Line 04 Sheppard",
        "SRT" = "Line 03 Scarborough",
        "YU" = "Line 01 Yellow",
      )
  )

ttc_df_filtered <- filter(ttc_data, ttc_data$min_delay > 0)
  
# not working - restarted, then worked
ttc_df_mean <- ttc_df_filtered %>% 
  group_by(line) |> 
  summarize(min_delay = mean(min_delay))

df_filtered_01 <- filter(ttc_df_mean, line != "", line != "YU/BD") |> 
  mutate(across(min_delay, round, 2)) # round off


ttc_df_arranged <- arrange(df_filtered_01, line)

```


# Introduction

### be clear about your objective/aim/estimand
You can and should cross-reference sections and sub-sections. For instance, Section \@ref(data). Quarto automatically makes the sections lower case and adds a dash to spaces to generate labels, for instance, Section \@ref(first-discussion-point). 



# Data

```{r}
#| warning: false
#| echo: false
#| label: fig-line-delays
#| fig-cap: Subway delay average - TTC trains with delay time.
#| fig-align: center
#| fig-width: 5.5
 
bar_graph_01 <- ggplot(data = ttc_df_arranged, aes (x = line, y = min_delay, fill = line)) +
  geom_bar(stat = "identity", alpha = 0.9, width=0.5) +
  scale_fill_manual(values = c("Line 01 Yellow" = "#fedd0b",
                              "Line 02 Green" = "#439523",
                              "Line 03 Scarborough" = "#00a8e0",
                              "Line 04 Sheppard" = "#830b53")) +
  geom_text(aes(label = min_delay), vjust=-0.3, size=4) +
  ylim(0, 15) +
  xlab("Trains") +
  ylab("Delay time (minutes)") +
  theme(rect = element_blank(),
        legend.position = "none",
        axis.line = element_line(colour = "#5a6472", 
                      size = 0.5, linetype = "solid")
        )

# calls the stored graph to show on screen
bar_graph_01


```


```{r}

ttc_data_days <- ttc_data |> 
  group_by(day) |> 
  summarize(min_delay = mean(min_delay)) |> 
  mutate(across(min_delay, round, 2))

```


```{r}
#| warning: false
#| echo: false
#| label: fig-line-delays
#| fig-cap: Subway delay average - TTC trains with delay time.
#| fig-align: center
#| fig-width: 5.5

bar_graph_02 <- ggplot(ttc_data_days, aes(x=factor(day, level=c("Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday")), y = min_delay)) +
  geom_bar(stat = "identity") +
  geom_col(aes(fill = min_delay)) + 
  scale_fill_gradient2(low = "white",
                       midpoint = mean((ttc_data_days$min_delay)*0.75),
                       high = "#FF6666") +
  geom_text(aes(label = min_delay), vjust=-0.3, size=4) +
  ylim(0, 5) +
  xlab("Days") +
  ylab("Delay time (minutes)") +
  theme(rect = element_blank(),
        legend.position = "none",
        axis.line = element_line(colour = "#5a6472", 
                      size = 0.5, linetype = "solid")
        )

# calls the stored graph to show on screen
bar_graph_02

```



Our data is of penguins (@fig-bills).

```{r}
#| label: fig-bills
#| fig-cap: Bills of penguins
#| echo: false

ggplot(penguins, aes(x = island, fill = species)) +
  geom_bar(alpha = 0.8) +
  scale_fill_manual(values = c("darkorange","purple","cyan4"),
                    guide = "none") +
  theme_minimal() +
  facet_wrap(~species, ncol = 1) +
  coord_flip()
```

Talk more about it.

Also bills and their average (@fig-billssssss). (You can change the height and width, but don't worry about doing that until you have finished every other aspect of the paper - Quarto will try to make it look nice and the defaults usually work.)

```{r}
#| label: fig-billssssss
#| fig-cap: More bills of penguins
#| echo: false
#| fig-width: 8
#| fig-height: 4

ggplot(penguins, aes(x = island, fill = species)) +
  geom_bar(alpha = 0.8) +
  scale_fill_manual(values = c("darkorange","purple","cyan4"),
                    guide = FALSE) +
  theme_minimal() +
  facet_wrap(~species, ncol = 1) +
  coord_flip()
```

Talk way more about it. 



# Model

$$
Pr(\theta | y) = \frac{Pr(y | \theta) Pr(\theta)}{Pr(y)}
$$ {#eq-bayes}

@eq-bayes seems useful, eh?

Here's a dumb example of how to use some references: In paper we run our analysis in `R` [@citeR]. We also use the `tidyverse` which was written by @thereferencecanbewhatever If we were interested in baseball data then @citeLahman could be useful. 

We can use maths by including latex between dollar signs, for instance $\theta$.


# Results

# Discussion

## First discussion point

If my paper were 10 pages, then should be be at least 2.5 pages. The discussion is a chance to show off what you know and what you learnt from all this. 

## Second discussion point

## Third discussion point

## Weaknesses and next steps

Weaknesses and next steps should also be included.

\newpage

\appendix

# Appendix {-}


# Additional details


\newpage


# References


